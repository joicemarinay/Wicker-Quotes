apply plugin: 'com.android.application'
apply from: '../config-android.gradle'
apply from: '../dependencies-groups.gradle'

/**
 * App name and version
 */
enum BuildType {
    DEBUG,
    RELEASE
}

static def getAppName(BuildType buildType) {
    String APP_NAME = "Wicker"
    switch (buildType) {
        case BuildType.DEBUG:
            return APP_NAME + " - " + BuildType.DEBUG.name()
        case BuildType.RELEASE:
            return APP_NAME
    }
}

def versionMajor = 0
def versionMinor = 3
def versionPatch = 0

/**
 * Android Configs
 */
android {
    defaultConfig {
        applicationId "io.rcm.wicker"
        versionCode versionMajor * 1000 + versionMinor * 100 + versionPatch * 10
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias project.WICKER_KEY_ALIAS
            keyPassword project.WICKER_KEY_PASSWORD
            storeFile file('../wicker-upload-key.jks')
            storePassword project.WICKER_STORE_PASSWORD
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            resValue "string", "app_name", getAppName(BuildType.DEBUG)
            resValue "string", "app_version", "${defaultConfig.versionName} - ${BuildType.DEBUG.name()}"
        }

        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            zipAlignEnabled true
            resValue "string", "app_name", getAppName(BuildType.RELEASE)
            resValue "string", "app_version", "${defaultConfig.versionName}"
            testProguardFile 'proguard-rules-test.pro'
        }
    }
}

/**
 * Dependencies
 */
dependencies {
    implementation project(path: ':onboarding')
    implementation project(path: ':quotes')
    implementation project(path: ':settings')

    implementation deps.firebase.core
}

apply plugin: 'com.google.gms.google-services'
