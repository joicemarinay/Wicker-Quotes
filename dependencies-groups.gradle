def Group(Closure closure) {
    closure.delegate = dependencies
    return closure
}

/**
 All groups below for easy copy/pasting:

 libraries()
 kotlin()
 archiComponents()
 dagger()
 rx()
 ui()
 testing()
 **/

ext {

    /**
     * Libraries
     */
    libraries = Group {
        implementation deps.libs
    }

    /**
     * Kotlin
     */
    kotlin = Group {
        implementation deps.kotlin.lib
    }

    /**
     * Android Architecture Components
     */
    archiComponents = Group {
        implementation deps.archiComponents.runtime
        implementation deps.archiComponents.extensions
        implementation deps.archiComponents.liveData
        kapt deps.archiComponents.compiler

        //Room
        implementation deps.archiComponents.roomRuntime
        implementation deps.archiComponents.roomRxJava
        kapt deps.archiComponents.roomCompiler
    }

    /**
     * Dagger
     */
    dagger = Group {
        implementation deps.dagger.dagger
        kapt deps.dagger.compiler
        implementation deps.dagger.android
        implementation deps.dagger.support
        kapt deps.dagger.processor
    }

    /**
     * Rx
     */
    rx = Group {
        implementation deps.rx.android
        implementation deps.rx.java
    }

    /**
     * UI
     */
    ui = Group {
        implementation deps.androidSupport.app
        implementation deps.androidSupport.compat
    }

    /**
     * Testing
     *
     * Note: Put test modules of other dependencies here
     */
    testing = Group {
        testImplementation(deps.jUnit) { exclude group: 'org.hamcrest' }
        testImplementation deps.archiComponents.testing
        androidTestImplementation(deps.androidTest.runner)
        androidTestImplementation(deps.androidTest.espresso)
    }

    //Can add groups for Dagger, debugging, network, Rx, Android Archi Components
}
